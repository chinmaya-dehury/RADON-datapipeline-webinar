tosca_definitions_version: tosca_simple_yaml_1_3

imports:
  - file: radonnodesdatapipelinesource__ConsumeRemote.tosca
    namespace_uri: radon.nodes.datapipeline.source
    namespace_prefix: radonnodesdatapipelinesource
node_types:
  radon.nodes.datapipeline.source.ConsMinIO:
    derived_from: radon.nodes.datapipeline.source.ConsumeRemote
    metadata:
      targetNamespace: "radon.nodes.datapipeline.source"
      abstract: "false"
      final: "false"
    attributes:
      template_name:
        type: string
        default: "MinIOBucket_SRC_PG_LocalConn"
    properties:
      BucketName:
        type: string
      cred_file_path:
        type: string
      MinIO_Endpoint:
        type: string
        description: Give http://<ip>:<port>
      Region:
        type: string
        required: false
        default: "eu-west-1"
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create:
            inputs:
              template_name:
                type: string
                required: true
                default: { get_attribute: [ SELF, template_name ] }
              template_file:
                type: string
                required: true
                default: "MinIOBucket_SRC_PG_LocalConn.xml"
            implementation:
              primary: /nodetypes/radon.nodes.datapipeline.source/ConsMinIO/files/create/create.yml
              dependencies: [ /nodetypes/radon.nodes.datapipeline.source/ConsMinIO/files/templateFile_localConn/MinIOBucket_SRC_PG_LocalConn.xml ]
              timeout: 0
          configure:
            inputs:
              MinIO_Endpoint:
                type: string
                required: false
                default: { get_property: [ SELF, MinIO_Endpoint ] }
              cred_file_path:
                type: string
                required: true
                default: { get_property: [ SELF, cred_file_path ] }
              BucketName:
                type: string
                required: true
                default: { get_property: [ SELF, BucketName ] }
              pipeline_id:
                type: string
                required: true
                default: { get_attribute: [ SELF, id ] }
              Region:
                type: string
                required: true
                default: { get_property: [ SELF, Region ] }
            implementation:
              primary: /nodetypes/radon.nodes.datapipeline.source/ConsMinIO/files/configure/configure.yml
              timeout: 0
    artifacts:
      templateFile_localConn:
        type: tosca.artifacts.File
        description: This Nifi template file is only for the local connection.
        file: /nodetypes/radon.nodes.datapipeline.source/ConsMinIO/files/templateFile_localConn/MinIOBucket_SRC_PG_LocalConn.xml
      create:
        type: tosca.artifacts.File
        file: /nodetypes/radon.nodes.datapipeline.source/ConsMinIO/files/create/create.yml
      configure:
        type: tosca.artifacts.File
        file: /nodetypes/radon.nodes.datapipeline.source/ConsMinIO/files/configure/configure.yml
      templateFile_RmtConn:
        type: tosca.artifacts.File
        description: This nifi template file is for remote connect.
        file: /nodetypes/radon.nodes.datapipeline.source/ConsMinIO/files/templateFile_RmtConn/MinIOBucket_SRC_PG_RmtConn.xml
