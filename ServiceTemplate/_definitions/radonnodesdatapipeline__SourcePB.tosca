tosca_definitions_version: tosca_simple_yaml_1_3

imports:
  - file: radonnodesdatapipeline__PipelineBlock.tosca
    namespace_uri: radon.nodes.datapipeline
    namespace_prefix: radonnodesdatapipeline
  - file: radonnodesabstract__DataPipeline.tosca
    namespace_uri: radon.nodes.abstract
    namespace_prefix: radonnodesabstract
  - file: radoncapabilitiesdatapipeline__ConnectToPipeline.tosca
    namespace_uri: radon.capabilities.datapipeline
    namespace_prefix: radoncapabilitiesdatapipeline
  - file: radonrelationshipsdatapipeline__ConnectNifiRemote.tosca
    namespace_uri: radon.relationships.datapipeline
    namespace_prefix: radonrelationshipsdatapipeline
  - file: radonrelationshipsdatapipeline__ConnectNifiLocal.tosca
    namespace_uri: radon.relationships.datapipeline
    namespace_prefix: radonrelationshipsdatapipeline
node_types:
  radon.nodes.datapipeline.SourcePB:
    derived_from: radon.nodes.datapipeline.PipelineBlock
    metadata:
      targetNamespace: "radon.nodes.datapipeline"
      abstract: "true"
      final: "false"
    requirements:
      - connectToPipeline:
          capability: radon.capabilities.datapipeline.ConnectToPipeline
          node: radon.nodes.abstract.DataPipeline
          relationship: radon.relationships.datapipeline.ConnectNifiLocal
          occurrences: [ 1, UNBOUNDED ]
      - host:
          capability: tosca.capabilities.Container
          relationship: tosca.relationships.HostedOn
          occurrences: [ 1, 1 ]
      - connectToPipelineRemote:
          capability: radon.capabilities.datapipeline.ConnectToPipeline
          node: radon.nodes.abstract.DataPipeline
          relationship: radon.relationships.datapipeline.ConnectNifiRemote
          occurrences: [ 1, UNBOUNDED ]
